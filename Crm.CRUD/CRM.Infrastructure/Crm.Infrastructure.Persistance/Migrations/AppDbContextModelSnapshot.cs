// <auto-generated />
using System;
using Crm.Infrastructure.Persistance.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Crm.Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Crm.Core.Domain.Entities.MainEntities.Company", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyAddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.MainEntities.Contact", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseOfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalesOfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PurchaseOfferId");

                    b.HasIndex("SalesOfferId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.MainEntities.Meeting", b =>
                {
                    b.Property<Guid>("MeetingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MeetingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeetingId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ContactId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.OfferEntities.PurchaseOffer", b =>
                {
                    b.Property<Guid>("PurchaseOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PurchaseOfferCreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseOfferCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOfferCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("PurchaseOfferDate")
                        .HasColumnType("date");

                    b.Property<string>("PurchaseOfferDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("PurchaseOfferDueDate")
                        .HasColumnType("date");

                    b.Property<string>("PurchaseOfferName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOfferNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOfferPriority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PurchaseOfferStatus")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PurchaseOfferTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PurchaseOfferType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PurchaseOfferUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOfferUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseOfferId");

                    b.HasIndex("CompanyId");

                    b.ToTable("PurchaseOffers");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.OfferEntities.PurchaseOfferProduct", b =>
                {
                    b.Property<Guid>("PurchaseOfferProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("PurchaseOfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PurchaseOfferProductCreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseOfferProductCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOfferProductCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOfferProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOfferProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PurchaseOfferProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PurchaseOfferProductQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PurchaseOfferProductUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOfferProductUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseOfferProductId");

                    b.HasIndex("PurchaseOfferId");

                    b.ToTable("PurchaseOfferProducts");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.OfferEntities.SalesOffer", b =>
                {
                    b.Property<Guid>("SalesOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SalesOfferCreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SalesOfferCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("SalesOfferDate")
                        .HasColumnType("date");

                    b.Property<string>("SalesOfferDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("SalesOfferDueDate")
                        .HasColumnType("date");

                    b.Property<string>("SalesOfferName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOfferNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOfferPriority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SalesOfferStatus")
                        .HasColumnType("bit");

                    b.Property<string>("SalesOfferType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SalesOfferUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesOfferUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesOfferId");

                    b.HasIndex("CompanyId");

                    b.ToTable("SalesOffers");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.OfferEntities.SalesOfferProduct", b =>
                {
                    b.Property<Guid>("SalesOfferProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("SalesOfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesOfferProductCreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SalesOfferProductCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesOfferProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOfferProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SalesOfferProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SalesOfferProductQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SalesOfferProductUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesOfferProductUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesOfferProductId");

                    b.HasIndex("SalesOfferId");

                    b.ToTable("SalesOfferProducts");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.SystemEntities.BaseEntity", b =>
                {
                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.ToTable("BaseEntities");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.MainEntities.Contact", b =>
                {
                    b.HasOne("Crm.Core.Domain.Entities.MainEntities.Company", "Company")
                        .WithMany("Contacts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Crm.Core.Domain.Entities.OfferEntities.PurchaseOffer", null)
                        .WithMany("Contacts")
                        .HasForeignKey("PurchaseOfferId");

                    b.HasOne("Crm.Core.Domain.Entities.OfferEntities.SalesOffer", null)
                        .WithMany("Contacts")
                        .HasForeignKey("SalesOfferId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.MainEntities.Meeting", b =>
                {
                    b.HasOne("Crm.Core.Domain.Entities.MainEntities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Crm.Core.Domain.Entities.MainEntities.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.Navigation("Company");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.OfferEntities.PurchaseOffer", b =>
                {
                    b.HasOne("Crm.Core.Domain.Entities.MainEntities.Company", "Company")
                        .WithMany("PurchaseOffers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.OfferEntities.PurchaseOfferProduct", b =>
                {
                    b.HasOne("Crm.Core.Domain.Entities.OfferEntities.PurchaseOffer", "PurchaseOffer")
                        .WithMany("PurchaseOfferProducts")
                        .HasForeignKey("PurchaseOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOffer");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.OfferEntities.SalesOffer", b =>
                {
                    b.HasOne("Crm.Core.Domain.Entities.MainEntities.Company", "Company")
                        .WithMany("SalesOffers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.OfferEntities.SalesOfferProduct", b =>
                {
                    b.HasOne("Crm.Core.Domain.Entities.OfferEntities.SalesOffer", "SalesOffer")
                        .WithMany("SalesOfferProducts")
                        .HasForeignKey("SalesOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesOffer");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.MainEntities.Company", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("PurchaseOffers");

                    b.Navigation("SalesOffers");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.OfferEntities.PurchaseOffer", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("PurchaseOfferProducts");
                });

            modelBuilder.Entity("Crm.Core.Domain.Entities.OfferEntities.SalesOffer", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("SalesOfferProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
